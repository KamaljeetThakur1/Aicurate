\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.chrome.service import Service\nfrom webdriver_manager.chrome import ChromeDriverManager\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\ndef invalid_date_filter(url, start_date, end_date):\n    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\n    try:\n        driver.get(url)\n        WebDriverWait(driver, 10).until(\n            EC.visibility_of_element_located((By.ID, "date-filter-container"))\n        )\n        driver.find_element(By.ID, "start-date").click()\n        time.sleep(1)\n        driver.find_element(By.XPATH, f"//td[contains(@data-date, '{start_date}')]").click()\n        driver.find_element(By.ID, "end-date").click()\n        time.sleep(1)\n        driver.find_element(By.XPATH, f"//td[contains(@data-date, '{end_date}')]").click()\n        driver.find_element(By.ID, "apply-filters").click()\n        error_message = WebDriverWait(driver, 15).until(\n            EC.presence_of_element_located((By.XPATH, "//div[contains(text(), 'End date must be after start date')]"))\n        ).text\n        assert error_message == "End date must be after start date."\n        print("Error message displayed correctly.")\n    except Exception as e:\n        print(f"Filtering failed: {e}")\n    finally:\n      