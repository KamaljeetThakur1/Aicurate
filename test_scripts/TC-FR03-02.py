\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.chrome.service import Service\nfrom webdriver_manager.chrome import ChromeDriverManager\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\ndef filter_non_existent_pro_number(url, pro_number):\n    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\n    try:\n        driver.get(url)\n        WebDriverWait(driver, 10).until(\n            EC.visibility_of_element_located((By.ID, "data-table-container"))\n        )\n        driver.find_element(By.ID, "filter-menu").click()\n        driver.find_element(By.XPATH, "//select[@id='criteria']/option[text()='Contains']").click()\n        driver.find_element(By.ID, "pro-number-input").send_keys(pro_number)\n        driver.find_element(By.ID, "apply-filter").click()\n        error_message = WebDriverWait(driver, 15).until(\n            EC.presence_of_element_located((By.XPATH, "//div[contains(text(), 'No results found')]"))\n        ).text\n        assert error_message == "No results found."\n        print("Correct message displayed: No results found.")\n    except Exception as e:\n        print(f"Filtering by non-existent PRO Number failed: {e}")\n    finally:\n        driver.quit()\n