\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.chrome.service import Service\nfrom webdriver_manager.chrome import ChromeDriverManager\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\ndef failed_sso_login(url, username, password):\n    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\n    try:\n        driver.get(url)\n        WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Login with SSO')]"))\n        ).click()\n        WebDriverWait(driver, 15).until(EC.presence_of_element_located((By.ID, "i0116"))).send_keys(username)\n        driver.find_element(By.ID, "idSIButton9").click()\n        WebDriverWait(driver, 15).until(EC.presence_of_element_located((By.ID, "i0118"))).send_keys(password)\n        driver.find_element(By.ID, "idSIButton9").click()\n        error_message = WebDriverWait(driver, 15).until(\n            EC.presence_of_element_located((By.XPATH, "//div[contains(text(), 'Invalid credentials')]"))\n        ).text\n        assert error_message == "Invalid credentials."\n        print("Error message displayed as expected.")\n    except Exception as e:\n        print(f"Login failed: {e}")\n    finally:\n        driver.quit()\n